name: CI-release
on:
  push:
    branches:
      - 'release-*'
env:
  GKSwstype: 100
  JULIA_PKG_PRECOMPILE_AUTO: false
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - run: |
          # Set up registries
          julia --project=@. -e '
            using Pkg
            println("Set up registries")
            Pkg.Registry.add(RegistrySpec(url="https://github.com/JuliaRegistries/General.git"))
            Pkg.Registry.add(RegistrySpec(url="https://github.com/JuliaQuantumControl/QuantumControlRegistry.git"))'
      - run: |
          # Run downstream "QuantumControlBase" tests
          julia --project=@. --threads auto -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test("QuantumControlBase")'
      - run: |
          # Run downstream "QuantumPropagators" tests
          julia --project=@. --threads auto -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test("QuantumPropagators")'
      - run: |
          # Run downstream "Krotov" tests
          julia --project=@. --threads auto -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test("Krotov")'
      - run: |
          # Run downstream "GRAPE" tests
          julia --project=@. --threads auto -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test("GRAPE")'
      - run: |
          # Run tests
          julia --project=@. -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test()'
